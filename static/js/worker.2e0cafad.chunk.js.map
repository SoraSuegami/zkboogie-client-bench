{"version":3,"file":"static/js/worker.2e0cafad.chunk.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/harmony module decorator","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../node_modules/comlink/src/comlink.ts","worker.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"4\":\"b1060433\",\"623\":\"3a2e59c6\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/zkboogie-client-bench/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t941: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkzkboogie_client_bench\"] = self[\"webpackChunkzkboogie_client_bench\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport type { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nexport const finalizer = Symbol(\"Comlink.finalizer\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nfunction isAllowedOrigin(\n  allowedOrigins: (string | RegExp)[],\n  origin: string\n): boolean {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function expose(\n  obj: any,\n  ep: Endpoint = globalThis as any,\n  allowedOrigins: (string | RegExp)[] = [\"*\"]\n) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n          if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n            obj[finalizer]();\n          }\n        }\n      })\n      .catch((error) => {\n        // Send Serialization Error To Caller\n        const [wireValue, transferables] = toWireValue({\n          value: new TypeError(\"Unserializable return value\"),\n          [throwMarker]: 0,\n        });\n        ep.postMessage({ ...wireValue, id }, transferables);\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction releaseEndpoint(ep: Endpoint) {\n  return requestResponseMessage(ep, {\n    type: MessageType.RELEASE,\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\n\ninterface FinalizationRegistry<T> {\n  new (cb: (heldValue: T) => void): FinalizationRegistry<T>;\n  register(\n    weakItem: object,\n    heldValue: T,\n    unregisterToken?: object | undefined\n  ): void;\n  unregister(unregisterToken: object): void;\n}\ndeclare var FinalizationRegistry: FinalizationRegistry<Endpoint>;\n\nconst proxyCounter = new WeakMap<Endpoint, number>();\nconst proxyFinalizers =\n  \"FinalizationRegistry\" in globalThis &&\n  new FinalizationRegistry((ep: Endpoint) => {\n    const newCount = (proxyCounter.get(ep) || 0) - 1;\n    proxyCounter.set(ep, newCount);\n    if (newCount === 0) {\n      releaseEndpoint(ep);\n    }\n  });\n\nfunction registerProxy(proxy: object, ep: Endpoint) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\n\nfunction unregisterProxy(proxy: object) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  registerProxy(proxy, ep);\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T extends {}>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = globalThis,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import { expose, proxy } from 'comlink';\nexport type MultiThreads = typeof import('zkboogie');\n\nlet multiThreads: MultiThreads | null = null;\n/**\n * Initialize the multi-threaded WASM module.\n * @returns The multi-threaded WASM module.\n */\nexport async function initMultiThreads(): Promise<MultiThreads> {\n    if (multiThreads !== null) {\n        console.log(\"multiThreads already initialized\");\n        return multiThreads;\n    }\n    const _multiThreads = await import(\n        'zkboogie'\n    );\n    console.log(_multiThreads);\n    await _multiThreads.default();\n    console.log(`hardware: ${navigator.hardwareConcurrency}`);\n    await _multiThreads.initThreadPool(navigator.hardwareConcurrency);\n    console.log(\"initThreadPool\");\n    await _multiThreads.init_panic_hook();\n    multiThreads = _multiThreads\n    return multiThreads;\n}\n\nexport async function genCircuit(num_input: number, num_add: number, num_mul: number): Promise<Uint8Array> {\n    const multiThreads = await initMultiThreads();\n    return multiThreads.gen_random_circuit(num_input, num_add, num_mul);\n}\n\nexport async function zkboogieProve(circuit: Uint8Array, num_input: number): Promise<Uint8Array> {\n    try {\n        const multiThreads = await initMultiThreads();\n        const hasher_prefix = new Uint32Array(0);\n        let input = Array(num_input).fill('0x' + '0'.repeat(64));\n        return multiThreads.zkboogie_prove_wasm(100, hasher_prefix, circuit, input);\n    } catch (e) {\n        console.error(e);\n        throw e;\n    }\n}\n\nconst exports = {\n    initMultiThreads,\n    genCircuit,\n    zkboogieProve\n};\nexpose(exports);\nexport type Worker = typeof exports;\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","g","globalThis","this","Function","window","hmd","create","children","set","Error","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","p","b","self","location","installedChunks","i","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","data","chunkIds","moreModules","runtime","length","pop","proxyMarker","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","_ref","serialized","isError","message","name","stack","assign","ep","arguments","allowedOrigins","addEventListener","callback","ev","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","concat","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","rawValue","apply","proxy","transfers","transferCache","transfer","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","toString","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","v","arr","Array","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","multiThreads","async","initMultiThreads","log","_multiThreads","default","navigator","hardwareConcurrency","initThreadPool","init_panic_hook","genCircuit","num_input","num_add","num_mul","gen_random_circuit","zkboogieProve","circuit","hasher_prefix","Uint32Array","input","repeat","zkboogie_prove_wasm"],"sourceRoot":""}
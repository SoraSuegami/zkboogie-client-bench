{"version":3,"file":"static/js/623.0a9487bd.chunk.js","mappings":"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","sources":["../node_modules/zkboogie/snippets/wasm-bindgen-rayon-3e04391371ad0a8e/src/workerHelpers.js","../node_modules/zkboogie/zkboogie_recursion.js"],"sourcesContent":["/*\r\n * Copyright 2022 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Note: this is never used, but necessary to prevent a bug in Firefox\r\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1702191) where it collects\r\n// Web Workers that have a shared WebAssembly memory with the main thread,\r\n// but are not explicitly rooted via a `Worker` instance.\r\n//\r\n// By storing them in a variable, we can keep `Worker` objects around and\r\n// prevent them from getting GC-d.\r\nlet _workers;\r\n\r\nexport async function startWorkers(module, memory, builder) {\r\n  if (builder.numThreads() === 0) {\r\n    throw new Error(`num_threads must be > 0.`);\r\n  }\r\n\r\n  const workerInit = {\r\n    module,\r\n    memory,\r\n    receiver: builder.receiver()\r\n  };\r\n\r\n  _workers = await Promise.all(\r\n    Array.from({ length: builder.numThreads() }, async () => {\r\n      // Self-spawn into a new Worker.\r\n      //\r\n      // TODO: while `new URL('...', import.meta.url) becomes a semi-standard\r\n      // way to get asset URLs relative to the module across various bundlers\r\n      // and browser, ideally we should switch to `import.meta.resolve`\r\n      // once it becomes a standard.\r\n      const worker = new Worker(\r\n        new URL('./workerHelpers.worker.js', import.meta.url),\r\n        {\r\n          type: 'module'\r\n        }\r\n      );\r\n      worker.postMessage(workerInit);\r\n      await new Promise(resolve =>\r\n        worker.addEventListener('message', resolve, { once: true })\r\n      );\r\n      return worker;\r\n    })\r\n  );\r\n  builder.build();\r\n}\r\n","import { startWorkers } from './snippets/wasm-bindgen-rayon-3e04391371ad0a8e/src/workerHelpers.js';\n\nlet wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().slice(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n/**\n*/\nexport function init_panic_hook() {\n    wasm.init_panic_hook();\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {number} num_input\n* @param {number} num_add\n* @param {number} num_mul\n* @returns {Uint8Array}\n*/\nexport function gen_random_circuit(num_input, num_add, num_mul) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.gen_random_circuit(retptr, num_input, num_add, num_mul);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4, 4) >>> 0;\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4, 4) >>> 0;\n    const mem = getUint32Memory0();\n    for (let i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n/**\n* @param {number} secpar\n* @param {Uint32Array} hasher_prefix\n* @param {Uint8Array} circuit\n* @param {(string)[]} input\n* @returns {Uint8Array}\n*/\nexport function zkboogie_prove_wasm(secpar, hasher_prefix, circuit, input) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray32ToWasm0(hasher_prefix, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray8ToWasm0(circuit, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passArrayJsValueToWasm0(input, wasm.__wbindgen_malloc);\n        const len2 = WASM_VECTOR_LEN;\n        wasm.zkboogie_prove_wasm(retptr, secpar, ptr0, len0, ptr1, len1, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v4 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v4;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n* @param {number} secpar\n* @param {Uint32Array} hasher_prefix\n* @param {Uint8Array} circuit\n* @param {(string)[]} expected_output\n* @param {Uint8Array} proof\n* @returns {boolean}\n*/\nexport function zkboogie_verify_wasm(secpar, hasher_prefix, circuit, expected_output, proof) {\n    const ptr0 = passArray32ToWasm0(hasher_prefix, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray8ToWasm0(circuit, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passArrayJsValueToWasm0(expected_output, wasm.__wbindgen_malloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ptr3 = passArray8ToWasm0(proof, wasm.__wbindgen_malloc);\n    const len3 = WASM_VECTOR_LEN;\n    const ret = wasm.zkboogie_verify_wasm(secpar, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return ret !== 0;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n* @param {number} num_threads\n* @returns {Promise<any>}\n*/\nexport function initThreadPool(num_threads) {\n    const ret = wasm.initThreadPool(num_threads);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} receiver\n*/\nexport function wbg_rayon_start_worker(receiver) {\n    wasm.wbg_rayon_start_worker(receiver);\n}\n\nconst wbg_rayon_PoolBuilderFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wbg_rayon_poolbuilder_free(ptr >>> 0));\n/**\n*/\nexport class wbg_rayon_PoolBuilder {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(wbg_rayon_PoolBuilder.prototype);\n        obj.__wbg_ptr = ptr;\n        wbg_rayon_PoolBuilderFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        wbg_rayon_PoolBuilderFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wbg_rayon_poolbuilder_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    numThreads() {\n        const ret = wasm.wbg_rayon_poolbuilder_numThreads(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    receiver() {\n        const ret = wasm.wbg_rayon_poolbuilder_receiver(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    build() {\n        wasm.wbg_rayon_poolbuilder_build(this.__wbg_ptr);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_instanceof_Window_f401953a2cf86220 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Window;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_crypto_566d7465cdbb6b7a = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_process_dc09a8c7d59982f6 = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_d98c6400c6ca2bd8 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_caaf83d002149bd5 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_msCrypto_0b84745e9245cdf6 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_94a9da52636aacbf = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getRandomValues_260cc23a41afad9a = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_randomFillSync_290977693942bf03 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_newnoargs_e258087cd0daa0ea = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_27c0f87801dedf93 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_ce0dbfc45cf2f5be = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_c6fb939a7f436783 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_d1e6af4856ba331b = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_207b558942527489 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_call_b3ca7c6051f9bec1 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_buffer_12d079cc21e14bdb = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_63b92bc8671ed464 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_a47bac70306a19a7 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_newwithlength_e9b4878cebadb3d3 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_a1f73cd4b5b42fe1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_module = function() {\n        const ret = __wbg_init.__wbindgen_wasm_module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_startWorkers_2ee336a9694dda13 = function(arg0, arg1, arg2) {\n        const ret = startWorkers(takeObject(arg0), takeObject(arg1), wbg_rayon_PoolBuilder.__wrap(arg2));\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n    imports.wbg.memory = maybe_memory || new WebAssembly.Memory({initial:19,maximum:16384,shared:true});\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module, maybe_memory) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports, maybe_memory);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input, maybe_memory) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('zkboogie_recursion_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports, maybe_memory);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n"],"names":["_workers","wasm","heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","Error","cachedUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","slice","addHeapObject","obj","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encode","encodeString","arg","view","buf","set","read","written","passStringToWasm0","malloc","realloc","subarray","mem","offset","code","charCodeAt","cachedInt32Memory0","getInt32Memory0","Int32Array","init_panic_hook","getArrayU8FromWasm0","gen_random_circuit","num_input","num_add","num_mul","retptr","__wbindgen_add_to_stack_pointer","r0","r1","v1","__wbindgen_free","cachedUint32Memory0","getUint32Memory0","Uint32Array","passArray32ToWasm0","passArray8ToWasm0","passArrayJsValueToWasm0","array","i","zkboogie_prove_wasm","secpar","hasher_prefix","circuit","input","ptr0","__wbindgen_malloc","len0","ptr1","len1","ptr2","len2","v4","zkboogie_verify_wasm","expected_output","proof","ptr3","len3","handleError","f","args","apply","this","e","__wbindgen_exn_store","initThreadPool","num_threads","wbg_rayon_start_worker","receiver","wbg_rayon_PoolBuilderFinalization","FinalizationRegistry","register","unregister","__wbg_wbg_rayon_poolbuilder_free","wbg_rayon_PoolBuilder","__wrap","Object","create","prototype","__wbg_ptr","__destroy_into_raw","free","numThreads","wbg_rayon_poolbuilder_numThreads","wbg_rayon_poolbuilder_receiver","build","wbg_rayon_poolbuilder_build","__wbg_get_imports","imports","wbg","__wbindgen_object_drop_ref","arg0","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","arg1","stack","__wbindgen_realloc","__wbg_error_f851667af71bcfc6","deferred0_0","deferred0_1","console","error","__wbg_instanceof_Window_f401953a2cf86220","result","Window","_","__wbg_crypto_566d7465cdbb6b7a","crypto","__wbindgen_is_object","val","__wbg_process_dc09a8c7d59982f6","process","__wbg_versions_d98c6400c6ca2bd8","versions","__wbg_node_caaf83d002149bd5","node","__wbindgen_is_string","__wbg_msCrypto_0b84745e9245cdf6","msCrypto","__wbg_require_94a9da52636aacbf","module","require","arguments","__wbindgen_is_function","__wbindgen_string_new","__wbg_getRandomValues_260cc23a41afad9a","getRandomValues","__wbg_randomFillSync_290977693942bf03","randomFillSync","__wbg_newnoargs_e258087cd0daa0ea","Function","__wbg_call_27c0f87801dedf93","call","__wbindgen_string_get","x","__wbindgen_object_clone_ref","__wbg_self_ce0dbfc45cf2f5be","self","__wbg_window_c6fb939a7f436783","window","__wbg_globalThis_d1e6af4856ba331b","globalThis","__wbg_global_207b558942527489","global","__wbindgen_is_undefined","__wbg_call_b3ca7c6051f9bec1","arg2","__wbg_buffer_12d079cc21e14bdb","__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb","__wbg_new_63b92bc8671ed464","__wbg_set_a47bac70306a19a7","__wbg_newwithlength_e9b4878cebadb3d3","__wbg_subarray_a1f73cd4b5b42fe1","__wbindgen_throw","__wbindgen_module","__wbg_init","__wbindgen_wasm_module","__wbindgen_memory","__wbg_startWorkers_2ee336a9694dda13","async","builder","workerInit","Promise","all","from","worker","Worker","URL","type","postMessage","resolve","addEventListener","once","startWorkers","__wbg_init_memory","maybe_memory","WebAssembly","Memory","initial","maximum","shared","__wbg_finalize_init","instance","exports","__wbindgen_start","initSync","Module","Instance","Request","fetch","Response","instantiateStreaming","headers","get","warn","bytes","arrayBuffer","instantiate","__wbg_load"],"sourceRoot":""}